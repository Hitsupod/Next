{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\michael\\\\Desktop\\\\bootcamp\\\\Next\\\\next\\\\src\\\\components\\\\Saved.js\";\n//import React from \"react\";\nimport API from \"../utils/API\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, ListGroup } from \"react-bootstrap\";\n\nfunction Saved() {\n  // Setting our component's initial state\n  const [Games, setGames] = useState([]);\n  const [formObject, setFormObject] = useState({}); // Load all books and store them with setBooks\n\n  useEffect(() => {\n    loadGames();\n  }, []); // Loads all books and sets them to books\n\n  function loadGames() {\n    API.getGames().then(res => setGames(res.data)).catch(err => console.log(err));\n  } // Deletes a book from the database with a given id, then reloads books from the db\n\n\n  function deleteGame(id) {\n    API.deleteGame(id).then(res => loadGames()).catch(err => console.log(err));\n  } // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormObject({ ...formObject,\n      [name]: value\n    });\n  } // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title && formObject.author) {\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis\n      }).then(res => loadBooks()).catch(err => console.log(err));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"welcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Saved Games:\"))), /*#__PURE__*/React.createElement(Row, {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"questions\",\n    bg: \"dark\",\n    text: \"white\",\n    style: {\n      width: \"18rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"questions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"questions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nexport default Saved;","map":{"version":3,"sources":["C:/Users/michael/Desktop/bootcamp/Next/next/src/components/Saved.js"],"names":["API","React","useState","useEffect","Container","Row","Col","Card","ListGroup","Saved","Games","setGames","formObject","setFormObject","loadGames","getGames","then","res","data","catch","err","console","log","deleteGame","id","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","title","author","saveBook","synopsis","loadBooks","width"],"mappings":"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","sourcesContent":["//import React from \"react\";\nimport API from \"../utils/API\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, ListGroup } from \"react-bootstrap\";\n\nfunction Saved() {\n  // Setting our component's initial state\n  const [Games, setGames] = useState([]);\n  const [formObject, setFormObject] = useState({});\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadGames();\n  }, []);\n\n  // Loads all books and sets them to books\n  function loadGames() {\n    API.getGames()\n      .then((res) => setGames(res.data))\n      .catch((err) => console.log(err));\n  }\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteGame(id) {\n    API.deleteGame(id)\n      .then((res) => loadGames())\n      .catch((err) => console.log(err));\n  }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({ ...formObject, [name]: value });\n  }\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title && formObject.author) {\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis,\n      })\n        .then((res) => loadBooks())\n        .catch((err) => console.log(err));\n    }\n  }\n  return (\n    <Container fluid className=\"main\">\n      <Row>\n        <Col>\n          <h3 className=\"welcome\">Saved Games:</h3>\n        </Col>\n      </Row>\n      <Row className=\"output\">\n        <Col md=\"auto\">\n          <Card\n            className=\"questions\"\n            bg=\"dark\"\n            text=\"white\"\n            style={{ width: \"18rem\" }}\n          >\n            <Card.Body>\n              <Card.Title className=\"questions\"></Card.Title>\n              <Card.Text className=\"questions\">\n                <ListGroup></ListGroup>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Saved;\n"]},"metadata":{},"sourceType":"module"}